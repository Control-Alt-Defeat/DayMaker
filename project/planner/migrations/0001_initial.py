# Generated by Django 2.2.6 on 2019-11-19 23:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventFinder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_type', models.CharField(blank=True, choices=[('Acai Bowls', 'Acai Bowls'), ('Afghan', 'Afghan'), ('African', 'African'), ('American (New)', 'American (New)'), ('American (Traditional)', 'American (Traditional)'), ('Arcades', 'Arcades'), ('Argentine', 'Argentine'), ('Asian Fusion', 'Asian Fusion'), ('Bagels', 'Bagels'), ('Bakeries', 'Bakeries'), ('Barbeque', 'Barbeque'), ('Bars', 'Bars'), ('Beer Bar', 'Beer Bar'), ('Beer Gardens', 'Beer Gardens'), ('Beer, Wine & Spirits', 'Beer, Wine & Spirits'), ('Belgian', 'Belgian'), ('Bookstores', 'Bookstores'), ('Bowling', 'Bowling'), ('Brazilian', 'Brazilian'), ('Breakfast & Brunch', 'Breakfast & Brunch'), ('Breweries', 'Breweries'), ('Brewpubs', 'Brewpubs'), ('British', 'British'), ('Bubble Tea', 'Bubble Tea'), ('Buffets', 'Buffets'), ('Burgers', 'Burgers'), ('Cafes', 'Cafes'), ('Cafeteria', 'Cafeteria'), ('Cajun/Creole', 'Cajun/Creole'), ('Caribbean', 'Caribbean'), ('Caterers', 'Caterers'), ('Cheesesteaks', 'Cheesesteaks'), ('Chicken Shop', 'Chicken Shop'), ('Chicken Wings', 'Chicken Wings'), ('Chinese', 'Chinese'), ('Cigar Bars', 'Cigar Bars'), ('Cocktail Bars', 'Cocktail Bars'), ('Coffee & Tea', 'Coffee & Tea'), ('Coffee Roasteries', 'Coffee Roasteries'), ('Comedy Clubs', 'Comedy Clubs'), ('Comfort Food', 'Comfort Food'), ('Cooking Classes', 'Cooking Classes'), ('Creperies', 'Creperies'), ('Cuban', 'Cuban'), ('Cupcakes', 'Cupcakes'), ('Custom Cakes', 'Custom Cakes'), ('Dance Clubs', 'Dance Clubs'), ('Delis', 'Delis'), ('Desserts', 'Desserts'), ('Diners', 'Diners'), ('Dinner Theater', 'Dinner Theater'), ('Dive Bars', 'Dive Bars'), ('Dominican', 'Dominican'), ('Donuts', 'Donuts'), ('Egyptian', 'Egyptian'), ('Empanadas', 'Empanadas'), ('Ethiopian', 'Ethiopian'), ('Falafel', 'Falafel'), ('Fast Food', 'Fast Food'), ('Festivals', 'Festivals'), ('Filipino', 'Filipino'), ('Fish & Chips', 'Fish & Chips'), ('Fondue', 'Fondue'), ('Food Stands', 'Food Stands'), ('Food Trucks', 'Food Trucks'), ('French', 'French'), ('Gastropubs', 'Gastropubs'), ('Gay Bars', 'Gay Bars'), ('German', 'German'), ('Gluten-Free', 'Gluten-Free'), ('Greek', 'Greek'), ('Grocery', 'Grocery'), ('Haitian', 'Haitian'), ('Halal', 'Halal'), ('Hawaiian', 'Hawaiian'), ('Health Markets', 'Health Markets'), ('Himalayan/Nepalese', 'Himalayan/Nepalese'), ('Hookah Bars', 'Hookah Bars'), ('Hot Dogs', 'Hot Dogs'), ('Hot Pot', 'Hot Pot'), ('Ice Cream & Frozen Yogurt', 'Ice Cream & Frozen Yogurt'), ('Imported Food', 'Imported Food'), ('Indian', 'Indian'), ('International Grocery', 'International Grocery'), ('Irish', 'Irish'), ('Irish Pub', 'Irish Pub'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Jazz & Blues', 'Jazz & Blues'), ('Juice Bars & Smoothies', 'Juice Bars & Smoothies'), ('Karaoke', 'Karaoke'), ('Kids Activities', 'Kids Activities'), ('Korean', 'Korean'), ('Laotian', 'Laotian'), ('Laser Tag', 'Laser Tag'), ('Latin American', 'Latin American'), ('Lebanese', 'Lebanese'), ('Local Flavor', 'Local Flavor'), ('Lounges', 'Lounges'), ('Macarons', 'Macarons'), ('Meat Shops', 'Meat Shops'), ('Mediterranean', 'Mediterranean'), ('Mexican', 'Mexican'), ('Middle Eastern', 'Middle Eastern'), ('Modern European', 'Modern European'), ('Mongolian', 'Mongolian'), ('Moroccan', 'Moroccan'), ('Music Venues', 'Music Venues'), ('Noodles', 'Noodles'), ('Pakistani', 'Pakistani'), ('Party & Event Planning', 'Party & Event Planning'), ('Pasta Shops', 'Pasta Shops'), ('Persian/Iranian', 'Persian/Iranian'), ('Peruvian', 'Peruvian'), ('Pet Adoption', 'Pet Adoption'), ('Pizza', 'Pizza'), ('Poke', 'Poke'), ('Polish', 'Polish'), ('Pool Halls', 'Pool Halls'), ('Pop-Up Restaurants', 'Pop-Up Restaurants'), ('Pretzels', 'Pretzels'), ('Pubs', 'Pubs'), ('Puerto Rican', 'Puerto Rican'), ('Ramen', 'Ramen'), ('Restaurants', 'Restaurants'), ('Russian', 'Russian'), ('Salad', 'Salad'), ('Salvadoran', 'Salvadoran'), ('Sandwiches', 'Sandwiches'), ('Seafood', 'Seafood'), ('Seafood Markets', 'Seafood Markets'), ('Senegalese', 'Senegalese'), ('Smokehouse', 'Smokehouse'), ('Somali', 'Somali'), ('Soul Food', 'Soul Food'), ('Soup', 'Soup'), ('South African', 'South African'), ('Southern', 'Southern'), ('Spanish', 'Spanish'), ('Specialty Food', 'Specialty Food'), ('Sports Bars', 'Sports Bars'), ('Steakhouses', 'Steakhouses'), ('Street Vendors', 'Street Vendors'), ('Sushi Bars', 'Sushi Bars'), ('Szechuan', 'Szechuan'), ('Tabletop Games', 'Tabletop Games'), ('Tacos', 'Tacos'), ('Taiwanese', 'Taiwanese'), ('Tapas Bars', 'Tapas Bars'), ('Tapas/Small Plates', 'Tapas/Small Plates'), ('Tex-Mex', 'Tex-Mex'), ('Thai', 'Thai'), ('Themed Cafes', 'Themed Cafes'), ('Trinidadian', 'Trinidadian'), ('Turkish', 'Turkish'), ('Vegan', 'Vegan'), ('Vegetarian', 'Vegetarian'), ('Venezuelan', 'Venezuelan'), ('Venues & Event Spaces', 'Venues & Event Spaces'), ('Vietnamese', 'Vietnamese'), ('Waffles', 'Waffles'), ('Whiskey Bars', 'Whiskey Bars'), ('Wine Bars', 'Wine Bars'), ('Wine Tasting Room', 'Wine Tasting Room'), ('Wraps', 'Wraps')], max_length=100, null=True, verbose_name='Location Type')),
                ('price', models.CharField(blank=True, choices=[('1', '$'), ('2', '$$'), ('3', '$$$')], max_length=1, null=True)),
                ('min_rating', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1, null=True, verbose_name='Minimum Rating (out of 5)')),
                ('transportation', models.CharField(blank=True, choices=[('1', 'Walk'), ('2', 'Car'), ('3', 'Both')], max_length=1, null=True, verbose_name='Mode of Transportation')),
                ('result_count', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Number of Search Results')),
                ('start_time', models.TimeField(blank=True, default='12:00', null=True, verbose_name='Start Time of Event')),
                ('end_time', models.TimeField(blank=True, default='12:30', null=True, verbose_name='End Time of Event')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date planned')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_name', models.CharField(max_length=30, verbose_name='Name of Location')),
                ('loc_type', models.CharField(max_length=30, verbose_name='Type of Location')),
                ('address', models.CharField(max_length=30, verbose_name='Address of Location')),
                ('phone_number', models.CharField(max_length=12, null=True, verbose_name='Business Phone Number')),
                ('price', models.CharField(blank=True, choices=[('1', '$'), ('2', '$$'), ('3', '$$$')], max_length=1, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('start_time', models.TimeField(verbose_name='start time of event')),
                ('end_time', models.TimeField(verbose_name='end time of event')),
                ('show', models.BooleanField(default=True)),
                ('plan', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='planner.Plan')),
            ],
        ),
    ]
